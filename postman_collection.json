{
  "info": {
    "name": "User Management System API",
    "description": "Complete API collection for user management system including login, signup, updates, and user operations",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3333",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login with Username",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"john_doe\",\n  \"password\": \"SecurePass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/login",
              "host": ["{{baseUrl}}"],
              "path": ["login"]
            },
            "description": "Login using username and password"
          }
        },
        {
          "name": "Signup New User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123\",\n  \"name\": \"John Doe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/signup",
              "host": ["{{baseUrl}}"],
              "path": ["signup"]
            },
            "description": "Register a new user account"
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Create New User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"jane_smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"password\": \"SecurePass123\",\n  \"name\": \"Jane Smith\",\n  \"mobile\": \"+1234567890\",\n  \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/add/user",
              "host": ["{{baseUrl}}"],
              "path": ["add", "user"]
            },
            "description": "Create a new user with all details"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["user", "{{userId}}"]
            },
            "description": "Retrieve user information by user ID"
          }
        },
        {
          "name": "Delete User by ID",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["user", "{{userId}}"]
            },
            "description": "Delete a user by user ID"
          }
        }
      ]
    },
    {
      "name": "User Updates",
      "item": [
        {
          "name": "Update Username",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"newUsername\": \"new_username_123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/update/username",
              "host": ["{{baseUrl}}"],
              "path": ["update", "username"]
            },
            "description": "Update user's username"
          }
        },
        {
          "name": "Update Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"currentPassword\": \"SecurePass123\",\n  \"newPassword\": \"NewSecurePass456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/update/password",
              "host": ["{{baseUrl}}"],
              "path": ["update", "password"]
            },
            "description": "Update user's password"
          }
        },
        {
          "name": "Update Name",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"newName\": \"John Michael Doe\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/update/name",
              "host": ["{{baseUrl}}"],
              "path": ["update", "name"]
            },
            "description": "Update user's full name"
          }
        },
        {
          "name": "Update Mobile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"newMobile\": \"+1987654321\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/update/mobile",
              "host": ["{{baseUrl}}"],
              "path": ["update", "mobile"]
            },
            "description": "Update user's mobile number"
          }
        }
      ]
    },
    {
      "name": "Test Data",
      "item": [
        {
          "name": "Test Login - Valid",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"TestPass123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/login",
              "host": ["{{baseUrl}}"],
              "path": ["login"]
            },
            "description": "Test login with valid credentials"
          }
        },
        {
          "name": "Test Login - Invalid Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/login",
              "host": ["{{baseUrl}}"],
              "path": ["login"]
            },
            "description": "Test login with invalid password"
          }
        },
        {
          "name": "Test Signup - Valid",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"newuser@example.com\",\n  \"password\": \"NewUserPass123\",\n  \"name\": \"New User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/signup",
              "host": ["{{baseUrl}}"],
              "path": ["signup"]
            },
            "description": "Test signup with valid data"
          }
        },
        {
          "name": "Test Signup - Invalid Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid-email\",\n  \"password\": \"ValidPass123\",\n  \"name\": \"Test User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/signup",
              "host": ["{{baseUrl}}"],
              "path": ["signup"]
            },
            "description": "Test signup with invalid email format"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-generate test data if needed",
          "if (pm.collectionVariables.get('userId') === '') {",
          "    pm.collectionVariables.set('userId', 'user-' + Date.now());",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common test script",
          "pm.test('Status code is 200', function () {",
          "    pm.response.to.have.status(200);",
          "});",
          "",
          "pm.test('Response has success property', function () {",
          "    const jsonData = pm.response.json();",
          "    pm.expect(jsonData).to.have.property('success');",
          "});",
          "",
          "pm.test('Response has message property', function () {",
          "    const jsonData = pm.response.json();",
          "    pm.expect(jsonData).to.have.property('message');",
          "});",
          "",
          "// Store userId from create user response",
          "if (pm.request.url.path.includes('add/user')) {",
          "    const response = pm.response.json();",
          "    if (response.success && response.userId) {",
          "        pm.collectionVariables.set('userId', response.userId);",
          "    }",
          "}"
        ]
      }
    }
  ]
} 